{
  "id": "qwik-server",
  "package": "@builder.io/qwik/server",
  "members": [
    {
      "name": "base",
      "id": "renderoptions-base",
      "hierarchy": [
        {
          "name": "RenderOptions",
          "id": "renderoptions-base"
        },
        {
          "name": "base",
          "id": "renderoptions-base"
        }
      ],
      "kind": "PropertySignature",
      "content": "Specifies the root of the JS files of the client build. Setting a base, will cause the render of the `q:base` attribute in the `q:container` element.\n\n\n```typescript\nbase?: string | ((options: RenderOptions) => string);\n```",
      "mdFile": "qwik.renderoptions.base.md"
    },
    {
      "name": "containerAttributes",
      "id": "renderoptions-containerattributes",
      "hierarchy": [
        {
          "name": "RenderOptions",
          "id": "renderoptions-containerattributes"
        },
        {
          "name": "containerAttributes",
          "id": "renderoptions-containerattributes"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\ncontainerAttributes?: Record<string, string>;\n```",
      "mdFile": "qwik.renderoptions.containerattributes.md"
    },
    {
      "name": "containerTagName",
      "id": "renderoptions-containertagname",
      "hierarchy": [
        {
          "name": "RenderOptions",
          "id": "renderoptions-containertagname"
        },
        {
          "name": "containerTagName",
          "id": "renderoptions-containertagname"
        }
      ],
      "kind": "PropertySignature",
      "content": "When set, the app is serialized into a fragment. And the returned html is not a complete document. Defaults to `html`\n\n\n```typescript\ncontainerTagName?: string;\n```",
      "mdFile": "qwik.renderoptions.containertagname.md"
    },
    {
      "name": "debug",
      "id": "serializedocumentoptions-debug",
      "hierarchy": [
        {
          "name": "SerializeDocumentOptions",
          "id": "serializedocumentoptions-debug"
        },
        {
          "name": "debug",
          "id": "serializedocumentoptions-debug"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\ndebug?: boolean;\n```",
      "mdFile": "qwik.serializedocumentoptions.debug.md"
    },
    {
      "name": "events",
      "id": "qwikloaderoptions-events",
      "hierarchy": [
        {
          "name": "QwikLoaderOptions",
          "id": "qwikloaderoptions-events"
        },
        {
          "name": "events",
          "id": "qwikloaderoptions-events"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nevents?: string[];\n```",
      "mdFile": "qwik.qwikloaderoptions.events.md"
    },
    {
      "name": "flushes",
      "id": "rendertostreamresult-flushes",
      "hierarchy": [
        {
          "name": "RenderToStreamResult",
          "id": "rendertostreamresult-flushes"
        },
        {
          "name": "flushes",
          "id": "rendertostreamresult-flushes"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nflushes: number;\n```",
      "mdFile": "qwik.rendertostreamresult.flushes.md"
    },
    {
      "name": "getQwikLoaderScript",
      "id": "getqwikloaderscript",
      "hierarchy": [
        {
          "name": "getQwikLoaderScript",
          "id": "getqwikloaderscript"
        }
      ],
      "kind": "Function",
      "content": "Provides the qwikloader.js file as a string. Useful for tooling to inline the qwikloader script into HTML.\n\n\n```typescript\nexport declare function getQwikLoaderScript(opts?: {\n    events?: string[];\n    debug?: boolean;\n}): string;\n```\n\n\n|  Parameter | Type | Description |\n|  --- | --- | --- |\n|  opts | { events?: string\\[\\]; debug?: boolean; } | _(Optional)_ |\n\n**Returns:**\n\nstring",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/scripts.ts",
      "mdFile": "qwik.getqwikloaderscript.md"
    },
    {
      "name": "html",
      "id": "rendertostringresult-html",
      "hierarchy": [
        {
          "name": "RenderToStringResult",
          "id": "rendertostringresult-html"
        },
        {
          "name": "html",
          "id": "rendertostringresult-html"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nhtml: string;\n```",
      "mdFile": "qwik.rendertostringresult.html.md"
    },
    {
      "name": "implementation",
      "id": "prefetchstrategy-implementation",
      "hierarchy": [
        {
          "name": "PrefetchStrategy",
          "id": "prefetchstrategy-implementation"
        },
        {
          "name": "implementation",
          "id": "prefetchstrategy-implementation"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nimplementation?: PrefetchImplementation;\n```",
      "mdFile": "qwik.prefetchstrategy.implementation.md"
    },
    {
      "name": "imports",
      "id": "prefetchresource-imports",
      "hierarchy": [
        {
          "name": "PrefetchResource",
          "id": "prefetchresource-imports"
        },
        {
          "name": "imports",
          "id": "prefetchresource-imports"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nimports: PrefetchResource[];\n```",
      "mdFile": "qwik.prefetchresource.imports.md"
    },
    {
      "name": "include",
      "id": "qwikloaderoptions-include",
      "hierarchy": [
        {
          "name": "QwikLoaderOptions",
          "id": "qwikloaderoptions-include"
        },
        {
          "name": "include",
          "id": "qwikloaderoptions-include"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\ninclude?: 'always' | 'never' | 'auto';\n```",
      "mdFile": "qwik.qwikloaderoptions.include.md"
    },
    {
      "name": "inOrder",
      "id": "streamingoptions-inorder",
      "hierarchy": [
        {
          "name": "StreamingOptions",
          "id": "streamingoptions-inorder"
        },
        {
          "name": "inOrder",
          "id": "streamingoptions-inorder"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\ninOrder?: InOrderStreaming;\n```",
      "mdFile": "qwik.streamingoptions.inorder.md"
    },
    {
      "name": "InOrderAuto",
      "id": "inorderauto",
      "hierarchy": [
        {
          "name": "InOrderAuto",
          "id": "inorderauto"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface InOrderAuto \n```\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [maximunChunk?](#inorderauto-maximunchunk) |  | number | _(Optional)_ |\n|  [maximunInitialChunk?](#inorderauto-maximuninitialchunk) |  | number | _(Optional)_ |\n|  [strategy](#inorderauto-strategy) |  | 'auto' |  |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.inorderauto.md"
    },
    {
      "name": "InOrderDisabled",
      "id": "inorderdisabled",
      "hierarchy": [
        {
          "name": "InOrderDisabled",
          "id": "inorderdisabled"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface InOrderDisabled \n```\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [strategy](./qwik.inorderdisabled.strategy.md) |  | 'disabled' |  |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.inorderdisabled.md"
    },
    {
      "name": "InOrderStreaming",
      "id": "inorderstreaming",
      "hierarchy": [
        {
          "name": "InOrderStreaming",
          "id": "inorderstreaming"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type InOrderStreaming = InOrderAuto | InOrderDisabled | InOrderDirect;\n```\n**References:** [InOrderAuto](#inorderauto)<!-- -->, [InOrderDisabled](#inorderdisabled)",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.inorderstreaming.md"
    },
    {
      "name": "isStatic",
      "id": "renderresult-isstatic",
      "hierarchy": [
        {
          "name": "RenderResult",
          "id": "renderresult-isstatic"
        },
        {
          "name": "isStatic",
          "id": "renderresult-isstatic"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nisStatic: boolean;\n```",
      "mdFile": "qwik.renderresult.isstatic.md"
    },
    {
      "name": "linkInsert",
      "id": "prefetchimplementation-linkinsert",
      "hierarchy": [
        {
          "name": "PrefetchImplementation",
          "id": "prefetchimplementation-linkinsert"
        },
        {
          "name": "linkInsert",
          "id": "prefetchimplementation-linkinsert"
        }
      ],
      "kind": "PropertySignature",
      "content": "`js-append`<!-- -->: Use JS runtime to create each `<link>` and append to the body.\n\n`html-append`<!-- -->: Render each `<link>` within html, appended at the end of the body.\n\n\n```typescript\nlinkInsert?: 'js-append' | 'html-append' | null;\n```",
      "mdFile": "qwik.prefetchimplementation.linkinsert.md"
    },
    {
      "name": "linkRel",
      "id": "prefetchimplementation-linkrel",
      "hierarchy": [
        {
          "name": "PrefetchImplementation",
          "id": "prefetchimplementation-linkrel"
        },
        {
          "name": "linkRel",
          "id": "prefetchimplementation-linkrel"
        }
      ],
      "kind": "PropertySignature",
      "content": "Value of the `<link rel=\"...\">` attribute when link is used. Defaults to `prefetch` if links are inserted.\n\n\n```typescript\nlinkRel?: 'prefetch' | 'preload' | 'modulepreload' | null;\n```",
      "mdFile": "qwik.prefetchimplementation.linkrel.md"
    },
    {
      "name": "locale",
      "id": "renderoptions-locale",
      "hierarchy": [
        {
          "name": "RenderOptions",
          "id": "renderoptions-locale"
        },
        {
          "name": "locale",
          "id": "renderoptions-locale"
        }
      ],
      "kind": "PropertySignature",
      "content": "Language to use when rendering the document.\n\n\n```typescript\nlocale?: string | ((options: RenderOptions) => string);\n```",
      "mdFile": "qwik.renderoptions.locale.md"
    },
    {
      "name": "manifest",
      "id": "renderresult-manifest",
      "hierarchy": [
        {
          "name": "RenderResult",
          "id": "renderresult-manifest"
        },
        {
          "name": "manifest",
          "id": "renderresult-manifest"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nmanifest?: QwikManifest;\n```",
      "mdFile": "qwik.renderresult.manifest.md"
    },
    {
      "name": "maximunChunk",
      "id": "inorderauto-maximunchunk",
      "hierarchy": [
        {
          "name": "InOrderAuto",
          "id": "inorderauto-maximunchunk"
        },
        {
          "name": "maximunChunk",
          "id": "inorderauto-maximunchunk"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nmaximunChunk?: number;\n```",
      "mdFile": "qwik.inorderauto.maximunchunk.md"
    },
    {
      "name": "maximunInitialChunk",
      "id": "inorderauto-maximuninitialchunk",
      "hierarchy": [
        {
          "name": "InOrderAuto",
          "id": "inorderauto-maximuninitialchunk"
        },
        {
          "name": "maximunInitialChunk",
          "id": "inorderauto-maximuninitialchunk"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nmaximunInitialChunk?: number;\n```",
      "mdFile": "qwik.inorderauto.maximuninitialchunk.md"
    },
    {
      "name": "position",
      "id": "qwikloaderoptions-position",
      "hierarchy": [
        {
          "name": "QwikLoaderOptions",
          "id": "qwikloaderoptions-position"
        },
        {
          "name": "position",
          "id": "qwikloaderoptions-position"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nposition?: 'top' | 'bottom';\n```",
      "mdFile": "qwik.qwikloaderoptions.position.md"
    },
    {
      "name": "prefetchEvent",
      "id": "prefetchimplementation-prefetchevent",
      "hierarchy": [
        {
          "name": "PrefetchImplementation",
          "id": "prefetchimplementation-prefetchevent"
        },
        {
          "name": "prefetchEvent",
          "id": "prefetchimplementation-prefetchevent"
        }
      ],
      "kind": "PropertySignature",
      "content": "Dispatch a `qprefetch` event with detail data containing the bundles that should be prefetched. The event dispatch script will be inlined into the document's HTML so any listeners of this event should already be ready to handle the event.\n\nThis implementation will inject a script similar to:\n\n```\n<script type=\"module\">\n  document.dispatchEvent(new CustomEvent(\"qprefetch\", { detail:{ \"bundles\": [...] } }))\n</script>\n```\nBy default, the `prefetchEvent` implementation will be set to `always`<!-- -->.\n\n\n```typescript\nprefetchEvent?: 'always' | null;\n```",
      "mdFile": "qwik.prefetchimplementation.prefetchevent.md"
    },
    {
      "name": "PrefetchImplementation",
      "id": "prefetchimplementation",
      "hierarchy": [
        {
          "name": "PrefetchImplementation",
          "id": "prefetchimplementation"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface PrefetchImplementation \n```\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [linkInsert?](#prefetchimplementation-linkinsert) |  | 'js-append' \\| 'html-append' \\| null | <p>_(Optional)_ <code>js-append</code>: Use JS runtime to create each <code>&lt;link&gt;</code> and append to the body.</p><p><code>html-append</code>: Render each <code>&lt;link&gt;</code> within html, appended at the end of the body.</p> |\n|  [linkRel?](#prefetchimplementation-linkrel) |  | 'prefetch' \\| 'preload' \\| 'modulepreload' \\| null | _(Optional)_ Value of the <code>&lt;link rel=&quot;...&quot;&gt;</code> attribute when link is used. Defaults to <code>prefetch</code> if links are inserted. |\n|  [prefetchEvent?](#prefetchimplementation-prefetchevent) |  | 'always' \\| null | <p>_(Optional)_ Dispatch a <code>qprefetch</code> event with detail data containing the bundles that should be prefetched. The event dispatch script will be inlined into the document's HTML so any listeners of this event should already be ready to handle the event.</p><p>This implementation will inject a script similar to:</p>\n```\n<script type=\"module\">\n  document.dispatchEvent(new CustomEvent(\"qprefetch\", { detail:{ \"bundles\": [...] } }))\n</script>\n```\n<p>By default, the <code>prefetchEvent</code> implementation will be set to <code>always</code>.</p> |\n|  [workerFetchInsert?](#prefetchimplementation-workerfetchinsert) |  | 'always' \\| 'no-link-support' \\| null | <p>_(Optional)_ <code>always</code>: Always include the worker fetch JS runtime.</p><p><code>no-link-support</code>: Only include the worker fetch JS runtime when the browser doesn't support <code>&lt;link&gt;</code> prefetch/preload/modulepreload.</p> |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.prefetchimplementation.md"
    },
    {
      "name": "PrefetchResource",
      "id": "prefetchresource",
      "hierarchy": [
        {
          "name": "PrefetchResource",
          "id": "prefetchresource"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface PrefetchResource \n```\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [imports](#prefetchresource-imports) |  | [PrefetchResource](#prefetchresource)<!-- -->\\[\\] |  |\n|  [url](#prefetchresource-url) |  | string |  |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.prefetchresource.md"
    },
    {
      "name": "prefetchResources",
      "id": "renderresult-prefetchresources",
      "hierarchy": [
        {
          "name": "RenderResult",
          "id": "renderresult-prefetchresources"
        },
        {
          "name": "prefetchResources",
          "id": "renderresult-prefetchresources"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nprefetchResources: PrefetchResource[];\n```",
      "mdFile": "qwik.renderresult.prefetchresources.md"
    },
    {
      "name": "prefetchStrategy",
      "id": "renderoptions-prefetchstrategy",
      "hierarchy": [
        {
          "name": "RenderOptions",
          "id": "renderoptions-prefetchstrategy"
        },
        {
          "name": "prefetchStrategy",
          "id": "renderoptions-prefetchstrategy"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nprefetchStrategy?: PrefetchStrategy | null;\n```",
      "mdFile": "qwik.renderoptions.prefetchstrategy.md"
    },
    {
      "name": "PrefetchStrategy",
      "id": "prefetchstrategy",
      "hierarchy": [
        {
          "name": "PrefetchStrategy",
          "id": "prefetchstrategy"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface PrefetchStrategy \n```\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [implementation?](#prefetchstrategy-implementation) |  | [PrefetchImplementation](#prefetchimplementation) | _(Optional)_ |\n|  [symbolsToPrefetch?](#prefetchstrategy-symbolstoprefetch) |  | [SymbolsToPrefetch](#symbolstoprefetch) | _(Optional)_ |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.prefetchstrategy.md"
    },
    {
      "name": "qwikLoader",
      "id": "renderoptions-qwikloader",
      "hierarchy": [
        {
          "name": "RenderOptions",
          "id": "renderoptions-qwikloader"
        },
        {
          "name": "qwikLoader",
          "id": "renderoptions-qwikloader"
        }
      ],
      "kind": "PropertySignature",
      "content": "Specifies if the Qwik Loader script is added to the document or not. Defaults to `{ include: true }`<!-- -->.\n\n\n```typescript\nqwikLoader?: QwikLoaderOptions;\n```",
      "mdFile": "qwik.renderoptions.qwikloader.md"
    },
    {
      "name": "QwikLoaderOptions",
      "id": "qwikloaderoptions",
      "hierarchy": [
        {
          "name": "QwikLoaderOptions",
          "id": "qwikloaderoptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface QwikLoaderOptions \n```\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [events?](#qwikloaderoptions-events) |  | string\\[\\] | _(Optional)_ |\n|  [include?](#qwikloaderoptions-include) |  | 'always' \\| 'never' \\| 'auto' | _(Optional)_ |\n|  [position?](#qwikloaderoptions-position) |  | 'top' \\| 'bottom' | _(Optional)_ |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.qwikloaderoptions.md"
    },
    {
      "name": "Render",
      "id": "render",
      "hierarchy": [
        {
          "name": "Render",
          "id": "render"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type Render = RenderToString | RenderToStream;\n```\n**References:** [RenderToString](#rendertostring)<!-- -->, [RenderToStream](#rendertostream)",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.render.md"
    },
    {
      "name": "RenderOptions",
      "id": "renderoptions",
      "hierarchy": [
        {
          "name": "RenderOptions",
          "id": "renderoptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface RenderOptions extends SerializeDocumentOptions \n```\n**Extends:** [SerializeDocumentOptions](#serializedocumentoptions)\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [base?](#renderoptions-base) |  | string \\| ((options: [RenderOptions](#renderoptions)<!-- -->) =&gt; string) | _(Optional)_ Specifies the root of the JS files of the client build. Setting a base, will cause the render of the <code>q:base</code> attribute in the <code>q:container</code> element. |\n|  [containerAttributes?](#renderoptions-containerattributes) |  | Record&lt;string, string&gt; | _(Optional)_ |\n|  [containerTagName?](#renderoptions-containertagname) |  | string | _(Optional)_ When set, the app is serialized into a fragment. And the returned html is not a complete document. Defaults to <code>html</code> |\n|  [envData?](./qwik.renderoptions.envdata.md) |  | Record&lt;string, any&gt; | _(Optional)_ |\n|  [locale?](#renderoptions-locale) |  | string \\| ((options: [RenderOptions](#renderoptions)<!-- -->) =&gt; string) | _(Optional)_ Language to use when rendering the document. |\n|  [prefetchStrategy?](#renderoptions-prefetchstrategy) |  | [PrefetchStrategy](#prefetchstrategy) \\| null | _(Optional)_ |\n|  [qwikLoader?](#renderoptions-qwikloader) |  | [QwikLoaderOptions](#qwikloaderoptions) | _(Optional)_ Specifies if the Qwik Loader script is added to the document or not. Defaults to <code>{ include: true }</code>. |\n|  [serverData?](#renderoptions-serverdata) |  | Record&lt;string, any&gt; | _(Optional)_ |\n|  [snapshot?](#renderoptions-snapshot) |  | boolean | _(Optional)_ Defaults to <code>true</code> |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.renderoptions.md"
    },
    {
      "name": "RenderResult",
      "id": "renderresult",
      "hierarchy": [
        {
          "name": "RenderResult",
          "id": "renderresult"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface RenderResult \n```\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [isStatic](#renderresult-isstatic) |  | boolean |  |\n|  [manifest?](#renderresult-manifest) |  | QwikManifest | _(Optional)_ |\n|  [prefetchResources](#renderresult-prefetchresources) |  | [PrefetchResource](#prefetchresource)<!-- -->\\[\\] |  |\n|  [snapshotResult](#renderresult-snapshotresult) |  | SnapshotResult \\| undefined |  |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.renderresult.md"
    },
    {
      "name": "renderToStream",
      "id": "rendertostream",
      "hierarchy": [
        {
          "name": "renderToStream",
          "id": "rendertostream"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport type RenderToStream = (opts: RenderToStreamOptions) => Promise<RenderToStreamResult>;\n```\n**References:** [RenderToStreamOptions](#rendertostreamoptions)<!-- -->, [RenderToStreamResult](#rendertostreamresult)",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/render.ts",
      "mdFile": "qwik.rendertostream.md"
    },
    {
      "name": "RenderToStream",
      "id": "rendertostream",
      "hierarchy": [
        {
          "name": "RenderToStream",
          "id": "rendertostream"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type RenderToStream = (opts: RenderToStreamOptions) => Promise<RenderToStreamResult>;\n```\n**References:** [RenderToStreamOptions](#rendertostreamoptions)<!-- -->, [RenderToStreamResult](#rendertostreamresult)",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.rendertostream.md"
    },
    {
      "name": "RenderToStreamOptions",
      "id": "rendertostreamoptions",
      "hierarchy": [
        {
          "name": "RenderToStreamOptions",
          "id": "rendertostreamoptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface RenderToStreamOptions extends RenderOptions \n```\n**Extends:** [RenderOptions](#renderoptions)\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [stream](#rendertostreamoptions-stream) |  | StreamWriter |  |\n|  [streaming?](#rendertostreamoptions-streaming) |  | [StreamingOptions](#streamingoptions) | _(Optional)_ |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.rendertostreamoptions.md"
    },
    {
      "name": "RenderToStreamResult",
      "id": "rendertostreamresult",
      "hierarchy": [
        {
          "name": "RenderToStreamResult",
          "id": "rendertostreamresult"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface RenderToStreamResult extends RenderResult \n```\n**Extends:** [RenderResult](#renderresult)\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [flushes](#rendertostreamresult-flushes) |  | number |  |\n|  [size](#rendertostreamresult-size) |  | number |  |\n|  [timing](#rendertostreamresult-timing) |  | { firstFlush: number; render: number; snapshot: number; } |  |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.rendertostreamresult.md"
    },
    {
      "name": "renderToString",
      "id": "rendertostring",
      "hierarchy": [
        {
          "name": "renderToString",
          "id": "rendertostring"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport type RenderToString = (opts: RenderToStringOptions) => Promise<RenderToStringResult>;\n```\n**References:** [RenderToStringOptions](#rendertostringoptions)<!-- -->, [RenderToStringResult](#rendertostringresult)",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/render.ts",
      "mdFile": "qwik.rendertostring.md"
    },
    {
      "name": "RenderToString",
      "id": "rendertostring",
      "hierarchy": [
        {
          "name": "RenderToString",
          "id": "rendertostring"
        }
      ],
      "kind": "TypeAlias",
      "content": "```typescript\nexport type RenderToString = (opts: RenderToStringOptions) => Promise<RenderToStringResult>;\n```\n**References:** [RenderToStringOptions](#rendertostringoptions)<!-- -->, [RenderToStringResult](#rendertostringresult)",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.rendertostring.md"
    },
    {
      "name": "RenderToStringOptions",
      "id": "rendertostringoptions",
      "hierarchy": [
        {
          "name": "RenderToStringOptions",
          "id": "rendertostringoptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface RenderToStringOptions extends RenderOptions \n```\n**Extends:** [RenderOptions](#renderoptions)",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.rendertostringoptions.md"
    },
    {
      "name": "RenderToStringResult",
      "id": "rendertostringresult",
      "hierarchy": [
        {
          "name": "RenderToStringResult",
          "id": "rendertostringresult"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface RenderToStringResult extends RenderResult \n```\n**Extends:** [RenderResult](#renderresult)\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [html](#rendertostringresult-html) |  | string |  |\n|  [timing](./qwik.rendertostringresult.timing.md) |  | { render: number; snapshot: number; } |  |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.rendertostringresult.md"
    },
    {
      "name": "resolveManifest",
      "id": "resolvemanifest",
      "hierarchy": [
        {
          "name": "resolveManifest",
          "id": "resolvemanifest"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function resolveManifest(manifest: QwikManifest | ResolvedManifest | undefined): ResolvedManifest | undefined;\n```\n\n\n|  Parameter | Type | Description |\n|  --- | --- | --- |\n|  manifest | QwikManifest \\| ResolvedManifest \\| undefined |  |\n\n**Returns:**\n\nResolvedManifest \\| undefined",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/render.ts",
      "mdFile": "qwik.resolvemanifest.md"
    },
    {
      "name": "SerializeDocumentOptions",
      "id": "serializedocumentoptions",
      "hierarchy": [
        {
          "name": "SerializeDocumentOptions",
          "id": "serializedocumentoptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface SerializeDocumentOptions \n```\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [debug?](#serializedocumentoptions-debug) |  | boolean | _(Optional)_ |\n|  [manifest?](./qwik.serializedocumentoptions.manifest.md) |  | QwikManifest \\| ResolvedManifest | _(Optional)_ |\n|  [symbolMapper?](#serializedocumentoptions-symbolmapper) |  | SymbolMapperFn | _(Optional)_ |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.serializedocumentoptions.md"
    },
    {
      "name": "serverData",
      "id": "renderoptions-serverdata",
      "hierarchy": [
        {
          "name": "RenderOptions",
          "id": "renderoptions-serverdata"
        },
        {
          "name": "serverData",
          "id": "renderoptions-serverdata"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nserverData?: Record<string, any>;\n```",
      "mdFile": "qwik.renderoptions.serverdata.md"
    },
    {
      "name": "setServerPlatform",
      "id": "setserverplatform",
      "hierarchy": [
        {
          "name": "setServerPlatform",
          "id": "setserverplatform"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function setServerPlatform(manifest: QwikManifest | ResolvedManifest | undefined): Promise<void>;\n```\n\n\n|  Parameter | Type | Description |\n|  --- | --- | --- |\n|  manifest | QwikManifest \\| ResolvedManifest \\| undefined |  |\n\n**Returns:**\n\nPromise&lt;void&gt;",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/index.ts",
      "mdFile": "qwik.setserverplatform.md"
    },
    {
      "name": "size",
      "id": "rendertostreamresult-size",
      "hierarchy": [
        {
          "name": "RenderToStreamResult",
          "id": "rendertostreamresult-size"
        },
        {
          "name": "size",
          "id": "rendertostreamresult-size"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nsize: number;\n```",
      "mdFile": "qwik.rendertostreamresult.size.md"
    },
    {
      "name": "snapshot",
      "id": "renderoptions-snapshot",
      "hierarchy": [
        {
          "name": "RenderOptions",
          "id": "renderoptions-snapshot"
        },
        {
          "name": "snapshot",
          "id": "renderoptions-snapshot"
        }
      ],
      "kind": "PropertySignature",
      "content": "Defaults to `true`\n\n\n```typescript\nsnapshot?: boolean;\n```",
      "mdFile": "qwik.renderoptions.snapshot.md"
    },
    {
      "name": "snapshotResult",
      "id": "renderresult-snapshotresult",
      "hierarchy": [
        {
          "name": "RenderResult",
          "id": "renderresult-snapshotresult"
        },
        {
          "name": "snapshotResult",
          "id": "renderresult-snapshotresult"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nsnapshotResult: SnapshotResult | undefined;\n```",
      "mdFile": "qwik.renderresult.snapshotresult.md"
    },
    {
      "name": "strategy",
      "id": "inorderauto-strategy",
      "hierarchy": [
        {
          "name": "InOrderAuto",
          "id": "inorderauto-strategy"
        },
        {
          "name": "strategy",
          "id": "inorderauto-strategy"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nstrategy: 'auto';\n```",
      "mdFile": "qwik.inorderauto.strategy.md"
    },
    {
      "name": "stream",
      "id": "rendertostreamoptions-stream",
      "hierarchy": [
        {
          "name": "RenderToStreamOptions",
          "id": "rendertostreamoptions-stream"
        },
        {
          "name": "stream",
          "id": "rendertostreamoptions-stream"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nstream: StreamWriter;\n```",
      "mdFile": "qwik.rendertostreamoptions.stream.md"
    },
    {
      "name": "streaming",
      "id": "rendertostreamoptions-streaming",
      "hierarchy": [
        {
          "name": "RenderToStreamOptions",
          "id": "rendertostreamoptions-streaming"
        },
        {
          "name": "streaming",
          "id": "rendertostreamoptions-streaming"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nstreaming?: StreamingOptions;\n```",
      "mdFile": "qwik.rendertostreamoptions.streaming.md"
    },
    {
      "name": "StreamingOptions",
      "id": "streamingoptions",
      "hierarchy": [
        {
          "name": "StreamingOptions",
          "id": "streamingoptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface StreamingOptions \n```\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [inOrder?](#streamingoptions-inorder) |  | [InOrderStreaming](#inorderstreaming) | _(Optional)_ |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.streamingoptions.md"
    },
    {
      "name": "symbolMapper",
      "id": "serializedocumentoptions-symbolmapper",
      "hierarchy": [
        {
          "name": "SerializeDocumentOptions",
          "id": "serializedocumentoptions-symbolmapper"
        },
        {
          "name": "symbolMapper",
          "id": "serializedocumentoptions-symbolmapper"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nsymbolMapper?: SymbolMapperFn;\n```",
      "mdFile": "qwik.serializedocumentoptions.symbolmapper.md"
    },
    {
      "name": "symbolsToPrefetch",
      "id": "prefetchstrategy-symbolstoprefetch",
      "hierarchy": [
        {
          "name": "PrefetchStrategy",
          "id": "prefetchstrategy-symbolstoprefetch"
        },
        {
          "name": "symbolsToPrefetch",
          "id": "prefetchstrategy-symbolstoprefetch"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nsymbolsToPrefetch?: SymbolsToPrefetch;\n```",
      "mdFile": "qwik.prefetchstrategy.symbolstoprefetch.md"
    },
    {
      "name": "SymbolsToPrefetch",
      "id": "symbolstoprefetch",
      "hierarchy": [
        {
          "name": "SymbolsToPrefetch",
          "id": "symbolstoprefetch"
        }
      ],
      "kind": "TypeAlias",
      "content": "auto: Prefetch all possible QRLs used by the document. Default\n\n\n```typescript\nexport type SymbolsToPrefetch = 'auto' | ((opts: {\n    manifest: QwikManifest;\n}) => PrefetchResource[]);\n```\n**References:** [PrefetchResource](#prefetchresource)",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/types.ts",
      "mdFile": "qwik.symbolstoprefetch.md"
    },
    {
      "name": "timing",
      "id": "rendertostreamresult-timing",
      "hierarchy": [
        {
          "name": "RenderToStreamResult",
          "id": "rendertostreamresult-timing"
        },
        {
          "name": "timing",
          "id": "rendertostreamresult-timing"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\ntiming: {\n        firstFlush: number;\n        render: number;\n        snapshot: number;\n    };\n```",
      "mdFile": "qwik.rendertostreamresult.timing.md"
    },
    {
      "name": "url",
      "id": "prefetchresource-url",
      "hierarchy": [
        {
          "name": "PrefetchResource",
          "id": "prefetchresource-url"
        },
        {
          "name": "url",
          "id": "prefetchresource-url"
        }
      ],
      "kind": "PropertySignature",
      "content": "```typescript\nurl: string;\n```",
      "mdFile": "qwik.prefetchresource.url.md"
    },
    {
      "name": "versions",
      "id": "versions",
      "hierarchy": [
        {
          "name": "versions",
          "id": "versions"
        }
      ],
      "kind": "Variable",
      "content": "```typescript\nversions: {\n    readonly qwik: string;\n    readonly qwikDom: string;\n}\n```",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik/src/server/utils.ts",
      "mdFile": "qwik.versions.md"
    },
    {
      "name": "workerFetchInsert",
      "id": "prefetchimplementation-workerfetchinsert",
      "hierarchy": [
        {
          "name": "PrefetchImplementation",
          "id": "prefetchimplementation-workerfetchinsert"
        },
        {
          "name": "workerFetchInsert",
          "id": "prefetchimplementation-workerfetchinsert"
        }
      ],
      "kind": "PropertySignature",
      "content": "`always`<!-- -->: Always include the worker fetch JS runtime.\n\n`no-link-support`<!-- -->: Only include the worker fetch JS runtime when the browser doesn't support `<link>` prefetch/preload/modulepreload.\n\n\n```typescript\nworkerFetchInsert?: 'always' | 'no-link-support' | null;\n```",
      "mdFile": "qwik.prefetchimplementation.workerfetchinsert.md"
    }
  ]
}