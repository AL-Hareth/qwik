{
  "id": "qwik-city-vite-netlify-edge",
  "package": "@builder.io/qwik-city/vite/netlify-edge",
  "members": [
    {
      "name": "functionRoutes",
      "id": "netlifyedgeadapteroptions-functionroutes",
      "hierarchy": [
        {
          "name": "NetlifyEdgeAdapterOptions",
          "id": "netlifyedgeadapteroptions-functionroutes"
        },
        {
          "name": "functionRoutes",
          "id": "netlifyedgeadapteroptions-functionroutes"
        }
      ],
      "kind": "PropertySignature",
      "content": "Determines if the build should generate the edge functions declarations `manifest.json` file.\n\nhttps://docs.netlify.com/edge-functions/declarations/\n\nDefaults to `true`<!-- -->.\n\n\n```typescript\nfunctionRoutes?: boolean;\n```",
      "mdFile": "qwik-city.netlifyedgeadapteroptions.functionroutes.md"
    },
    {
      "name": "netifyEdgeAdapter",
      "id": "netifyedgeadapter",
      "hierarchy": [
        {
          "name": "netifyEdgeAdapter",
          "id": "netifyedgeadapter"
        }
      ],
      "kind": "Variable",
      "content": "> Warning: This API is now obsolete.\n> \n> Use `netlifyEdgeAdapter` exported from `@builder.io/qwik-city/adapters/netlify-edge/vite` instead.\n> \n\n\n```typescript\nnetifyEdgeAdapter: typeof netlifyEdgeAdapter\n```",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik-city/adapters/netlify-edge/vite/index.ts",
      "mdFile": "qwik-city.netifyedgeadapter.md"
    },
    {
      "name": "netifyEdgeAdaptor",
      "id": "netifyedgeadaptor",
      "hierarchy": [
        {
          "name": "netifyEdgeAdaptor",
          "id": "netifyedgeadaptor"
        }
      ],
      "kind": "Variable",
      "content": "> Warning: This API is now obsolete.\n> \n> Use `netlifyEdgeAdapter` exported from `@builder.io/qwik-city/adapters/netlify-edge/vite` instead.\n> \n\n\n```typescript\nnetifyEdgeAdaptor: typeof netlifyEdgeAdapter\n```",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik-city/adapters/netlify-edge/vite/index.ts",
      "mdFile": "qwik-city.netifyedgeadaptor.md"
    },
    {
      "name": "netlifyEdgeAdapter",
      "id": "netlifyedgeadapter",
      "hierarchy": [
        {
          "name": "netlifyEdgeAdapter",
          "id": "netlifyedgeadapter"
        }
      ],
      "kind": "Function",
      "content": "```typescript\nexport declare function netlifyEdgeAdapter(opts?: NetlifyEdgeAdapterOptions): any;\n```\n\n\n|  Parameter | Type | Description |\n|  --- | --- | --- |\n|  opts | [NetlifyEdgeAdapterOptions](#netlifyedgeadapteroptions) | _(Optional)_ |\n\n**Returns:**\n\nany",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik-city/adapters/netlify-edge/vite/index.ts",
      "mdFile": "qwik-city.netlifyedgeadapter.md"
    },
    {
      "name": "NetlifyEdgeAdapterOptions",
      "id": "netlifyedgeadapteroptions",
      "hierarchy": [
        {
          "name": "NetlifyEdgeAdapterOptions",
          "id": "netlifyedgeadapteroptions"
        }
      ],
      "kind": "Interface",
      "content": "```typescript\nexport interface NetlifyEdgeAdapterOptions extends ServerAdapterOptions \n```\n**Extends:** ServerAdapterOptions\n\n\n|  Property | Modifiers | Type | Description |\n|  --- | --- | --- | --- |\n|  [functionRoutes?](#netlifyedgeadapteroptions-functionroutes) |  | boolean | <p>_(Optional)_ Determines if the build should generate the edge functions declarations <code>manifest.json</code> file.</p><p>https://docs.netlify.com/edge-functions/declarations/</p><p>Defaults to <code>true</code>.</p> |\n|  [staticPaths?](#netlifyedgeadapteroptions-staticpaths) |  | string\\[\\] | _(Optional)_ Manually add pathnames that should be treated as static paths and not SSR. For example, when these pathnames are requested, their response should come from a static file, rather than a server-side rendered response. |",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik-city/adapters/netlify-edge/vite/index.ts",
      "mdFile": "qwik-city.netlifyedgeadapteroptions.md"
    },
    {
      "name": "NetlifyEdgeAdaptorOptions",
      "id": "netlifyedgeadaptoroptions",
      "hierarchy": [
        {
          "name": "NetlifyEdgeAdaptorOptions",
          "id": "netlifyedgeadaptoroptions"
        }
      ],
      "kind": "TypeAlias",
      "content": "> Warning: This API is now obsolete.\n> \n> Use `NetlifyEdgeAdapterOptions` instead.\n> \n\n\n```typescript\nexport type NetlifyEdgeAdaptorOptions = NetlifyEdgeAdapterOptions;\n```\n**References:** [NetlifyEdgeAdapterOptions](#netlifyedgeadapteroptions)",
      "editUrl": "https://github.com/BuilderIO/qwik/tree/main/packages/qwik-city/adapters/netlify-edge/vite/index.ts",
      "mdFile": "qwik-city.netlifyedgeadaptoroptions.md"
    },
    {
      "name": "staticPaths",
      "id": "netlifyedgeadapteroptions-staticpaths",
      "hierarchy": [
        {
          "name": "NetlifyEdgeAdapterOptions",
          "id": "netlifyedgeadapteroptions-staticpaths"
        },
        {
          "name": "staticPaths",
          "id": "netlifyedgeadapteroptions-staticpaths"
        }
      ],
      "kind": "PropertySignature",
      "content": "Manually add pathnames that should be treated as static paths and not SSR. For example, when these pathnames are requested, their response should come from a static file, rather than a server-side rendered response.\n\n\n```typescript\nstaticPaths?: string[];\n```",
      "mdFile": "qwik-city.netlifyedgeadapteroptions.staticpaths.md"
    }
  ]
}